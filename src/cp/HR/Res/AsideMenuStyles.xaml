<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <BooleanToVisibilityConverter x:Key="BoolToVis" />
    <Style TargetType="StackPanel">
        <Setter Property="Background" Value="White"/>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="DodgerBlue" />
        <Setter Property="Margin" Value="20 7" />
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!-- Box -->
                        <Border x:Name="checkBoxBorder"
                                Width="14" Height="14"
                                Background="White"
                                BorderBrush="Gray" BorderThickness="1"
                                VerticalAlignment="Center" HorizontalAlignment="Center"
                                />

                        <!-- CheckMark -->
                        <Path x:Name="checkMark"
                              Grid.Column="0"
                              Data="M 0 4 L 3 7 L 8 0"
                              Stroke="{StaticResource magentaDarkBrush}" StrokeThickness="2"
                              Visibility="Collapsed"
                              VerticalAlignment="Center" HorizontalAlignment="Center"
                              />

                        <!-- Content with TextBlock for trimming -->
                        <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               Margin="7,0,0,0"
                               Text="{TemplateBinding Content}"
                               TextTrimming="CharacterEllipsis"
                               TextWrapping="NoWrap"
                               FontFamily="{TemplateBinding FontFamily}"
                               FontSize="{TemplateBinding FontSize}"
                               Foreground="{TemplateBinding Foreground}"
                               FontWeight="{TemplateBinding FontWeight}"
                               />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="#AA1E90FF" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="AsideToggleButton" TargetType="ToggleButton">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="DodgerBlue" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!-- Remove standard focus inner border style -->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <!-- Icon -->
                            <ContentPresenter x:Name="Icon"
                                          ContentSource="Tag"
                                          VerticalAlignment="Center"
                                          Margin="0,0,10,0"
                                          Grid.Column="0">
                                <ContentPresenter.Resources>
                                    <Style TargetType="Path">
                                        <Setter Property="Fill" Value="DodgerBlue"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="False">
                                                <Setter Property="Fill" Value="{StaticResource magentaDarkBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                                <Setter Property="Fill" Value="{StaticResource magentaDarkBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>

                            <!-- Content with ellipsis -->
                            <TextBlock x:Name="ContentHost"
                                       Grid.Column="1"
                                       VerticalAlignment="Center"
                                       Text="{TemplateBinding Content}"
                                       TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       />

                            <!-- Additional right element (e.g. arrow) -->
                            <Path x:Name="Arrow"
                              Grid.Column="2"
                              VerticalAlignment="Center"
                              Margin="4,0,0,0"
                              Fill="Gray"
                              Data="M 0 0 L 4 4 L 0 8 Z"
                              Visibility="Collapsed"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Mouse Over -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#dbe3f0"/>
                            <Setter Property="Foreground" Value="DodgerBlue" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <!-- Press -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#c6d5ec" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#adc6eb" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontWeight" Value="Normal" />
                        </Trigger>
                        <!-- Focused -->
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#80a0b0d0"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                        </Trigger>
                        <!-- Checked -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#3884c7"/>
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <!-- Focused when Enabled -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#80a0b0d0"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                        </MultiTrigger>
                        <!-- Unfocused when Unchecked -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                        </MultiTrigger>
                        <!-- Enabled when Checked -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource WhiteDarkBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="#BB3884c7"/>
                        </MultiTrigger>
                        <!-- Disabled when Checked -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="White" />
                            <Setter TargetName="Border" Property="Background" Value="#adc6eb" />
                        </MultiTrigger>
                        <!-- Mouse Over when Checked -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="#adc6eb"/>
                        </MultiTrigger>
                        <!-- Pressed when Checked -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="White" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="DodgerBlue" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="0 2"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border x:Name="Border"
                            Background="Transparent"
                            CornerRadius="5"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <!-- Иконка -->
                            <ContentPresenter x:Name="Icon"
                                              ContentSource="Icon"
                                              VerticalAlignment="Center"
                                              Margin="0,0,10,0"
                                              Grid.Column="0">
                                <ContentPresenter.Resources>
                                    <Style TargetType="Path">
                                        <Setter Property="Fill" Value="DodgerBlue"/>
                                        <!-- Цвет иконки по умолчанию -->
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=MenuItem}}" Value="False">
                                                <Setter Property="Fill" Value="{StaticResource magentaDarkBrush}"/>
                                                <!-- Цвет иконки, когда MenuItem недоступен -->
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>

                            <!-- Заголовок -->
                            <ContentPresenter x:Name="HeaderHost"
                                              ContentSource="Header"
                                              VerticalAlignment="Center"
                                              Grid.Column="1"/>
                            <!-- Стрелка подменю -->
                            <Path x:Name="Arrow"
                              Grid.Column="2"
                              VerticalAlignment="Center"
                              Margin="4,0,0,0"
                              Fill="Gray"
                              Data="M 0 0 L 4 4 L 0 8 Z"
                              Visibility="Collapsed"/>

                            <!-- Popup для подменю -->
                            <Popup x:Name="PART_Popup"
                                   Placement="Right"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   PopupAnimation="Fade">
                                <Border Background="White"
                                        BorderBrush="Gray"
                                        BorderThickness="1"
                                        SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="True">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#dbe3f0"/>
                            <Setter Property="Foreground" Value="DodgerBlue" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#3884c7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#c6d5ec" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#3884c7" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <Setter TargetName="Border" Property="Background" Value="#adc6eb" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Cursor" Value="Hand"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource WhiteDarkBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="#adc6eb" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="DodgerBlue" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

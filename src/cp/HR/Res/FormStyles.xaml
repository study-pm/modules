<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
                    xmlns:util="clr-namespace:HR.Utilities">
    <util:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
    <util:ErrorVisibilityConverter x:Key="ErrorVisibilityConverter"/>
    <controls:BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
    <Style x:Key="Form" TargetType="Panel">
        <Setter Property="Margin" Value="0 20 0 0"/>
        <Setter Property="MaxWidth" Value="300"/>
    </Style>
    <Style TargetType="CheckBox">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource cyanDarkBrush}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!-- Box -->
                        <Border x:Name="checkBoxBorder"
                            Width="14" Height="14"
                            Background="White"
                            BorderBrush="Gray" BorderThickness="1"
                            VerticalAlignment="Center" HorizontalAlignment="Center"
                            />

                        <!-- CheckMark -->
                        <Path x:Name="checkMark"
                          Grid.Column="0"
                          Data="M 0 4 L 3 7 L 8 0"
                          Stroke="{StaticResource magentaDarkBrush}" StrokeThickness="2"
                          Visibility="Collapsed"
                          VerticalAlignment="Center" HorizontalAlignment="Center"
                          />

                        <!-- Content with TextBlock for trimming -->
                        <TextBlock Grid.Column="1"
                           VerticalAlignment="Center"
                           Margin="3,0,0,0"
                           Text="{TemplateBinding Content}"
                           TextTrimming="CharacterEllipsis"
                           TextWrapping="NoWrap"
                           FontFamily="{TemplateBinding FontFamily}"
                           FontSize="{TemplateBinding FontSize}"
                           Foreground="{TemplateBinding Foreground}"
                           FontWeight="{TemplateBinding FontWeight}"
                           />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter TargetName="checkMark" Property="Stroke" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter TargetName="checkBoxBorder" Property="Opacity" Value="0.75"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="#AA009ca2" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="{StaticResource cyanLightBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GroupCheck" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Margin" Value="5 0 5 5" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="FontWeight" Value="Normal" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource cyanDarkBrush}"/>
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0 5"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style x:Key="FormLabel" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ContentTemplate">
        <Setter.Value>
            <DataTemplate>
                <TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" />
            </DataTemplate>
        </Setter.Value>
    </Setter>
    </Style>
    <Style x:Key="FormEl" TargetType="FrameworkElement">
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style x:Key="FormElem" TargetType="FrameworkElement">
        <Setter Property="Margin" Value="5 10"/>
    </Style>
    <Style x:Key="FormElement" TargetType="FrameworkElement">
        <Setter Property="Margin" Value="0 10"/>
    </Style>
     <Style x:Key="MessageBox" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontStretch" Value="Condensed"/>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="MinHeight" Value="10"/>
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!-- Style for displaying the error -->
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="0" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.75"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="DodgerBlue"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#f9d3d2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True"/>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="util:ValidationHelper.Touched" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="Red"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#e0f9d2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="util:ValidationHelper.Touched" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource baseBackgroundBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FormTextBox" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Margin" Value="5,0,5,0"/>
    </Style>
    <Style x:Key="TextBoxMini" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0 5"/>
    </Style>
    <Style x:Key="FormTextBlock" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="Padding" Value="0 8"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="PasswordBox">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="0" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.75"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="DodgerBlue"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#f9d3d2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True"/>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="util:ValidationHelper.Touched" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="Red"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#e0f9d2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="util:ValidationHelper.Touched" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource baseBackgroundBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FormPasswordBox" TargetType="PasswordBox" BasedOn="{StaticResource {x:Type PasswordBox}}">
        <Setter Property="Margin" Value="5,0,5,0"/>
    </Style>
    <Style x:Key="FormComboBox" TargetType="ComboBox">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="Margin" Value="3,0,3,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3"
                                SnapsToDevicePixels="True">
                            <ToggleButton x:Name="ToggleButton"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Background="Transparent"
                                          BorderBrush="{x:Null}" BorderThickness="0"
                                          Focusable="False"
                                          ClickMode="Press"
                                          Padding="{TemplateBinding Padding}"
                                          MinHeight="{TemplateBinding MinHeight}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          HorizontalContentAlignment="Stretch"
                                          VerticalContentAlignment="Center">
                                <Grid>
                                    <ContentPresenter x:Name="ContentSite"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      Margin="5,0,30,0"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      RecognizesAccessKey="True"/>
                                    <Path x:Name="Arrow"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Right"
                                          Margin="0,0,5,0"
                                          Data="M 0 0 L 4 4 L 8 0 Z"
                                          Fill="Gray"/>
                                </Grid>
                            </ToggleButton>
                        </Border>

                        <!-- Popup with elements -->
                        <Popup x:Name="PART_Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                            <Border x:Name="DropDownBorder"
                                    SnapsToDevicePixels="True"
                                    Background="White"
                                    BorderBrush="DarkGray" BorderThickness="1"
                                    CornerRadius="3"
                                    Padding="0" Margin="5"
                                    Width="{TemplateBinding ActualWidth}">
                                <Border.Effect>
                                    <DropShadowEffect Color="Gray" Direction="270" ShadowDepth="4" BlurRadius="8" Opacity="0.3" />
                                </Border.Effect>
                                <ScrollViewer Margin="4,6,4,6"
                                              HorizontalScrollBarVisibility="Disabled"
                                              SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.75"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <!-- Mouse over -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="DarkGray"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="DarkGray"/>
                        </Trigger>
                        <!-- Keyboard focus -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="DodgerBlue"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="DodgerBlue"/>
                        </Trigger>
                        <!-- Pressed -->
                        <Trigger Property="IsPressed" SourceName="ToggleButton" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="DodgerBlue"/>
                        </Trigger>
                        <!-- Validation error + focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="#f9d3d2"/>
                        </MultiTrigger>
                        <!-- Validation error + not focused + Touched -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True"/>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="util:ValidationHelper.Touched" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="BorderBrush" Value="Red"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"/>
                        </MultiTrigger>
                        <!-- No error + focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="#e0f9d2"/>
                        </MultiTrigger>
                        <!-- Focused + not touched -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="util:ValidationHelper.Touched" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource baseBackgroundBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ComboBoxItem">
        <Setter Property="Padding" Value="10"/>
    </Style>

    <Style x:Key="FormRadioButton" TargetType="RadioButton">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="{StaticResource cyanDarkBrush}"/>
        <Setter Property="Margin" Value="0 0 10 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- Marker -->
                        <Grid Grid.Column="0" Width="16" Height="16" VerticalAlignment="Center">
                            <Ellipse Stroke="Gray" StrokeThickness="1" Fill="White"/>
                            <Ellipse x:Name="Dot"
                             Width="8" Height="8"
                             Fill="{StaticResource magentaDarkBrush}"
                             Visibility="Collapsed"/>
                        </Grid>

                        <!-- Text -->
                        <ContentPresenter Grid.Column="1"
                                  VerticalAlignment="Center"
                                  Margin="5,0,20,0"
                                  TextBlock.FontSize="{TemplateBinding FontSize}"
                                  TextBlock.Foreground="{TemplateBinding Foreground}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Dot" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Dot" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Dot" Property="Fill" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="Dot" Property="Fill" Value="{StaticResource magentaDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFocusVisual" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="0" Stroke="DodgerBlue" Opacity="1" StrokeThickness="1" RadiusX="3" RadiusY="3" SnapsToDevicePixels="True">
                        <Rectangle.Effect>
                            <DropShadowEffect Color="#264d7f7f" Direction="270" ShadowDepth="5" BlurRadius="10" Opacity="0.15"/>
                        </Rectangle.Effect>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImgButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- Image Content -->
                        <ContentPresenter />
                        <!-- Overlay -->
                        <Border x:Name="Overlay" Background="#FFFFFF" Opacity="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Overlay" Property="Opacity" Value="0.25"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Overlay" Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Overlay" Property="Opacity" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FormButtons" TargetType="Grid">
        <Setter Property="Margin" Value="0 20"/>
    </Style>

    <Style x:Key="FormBtn" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteDarkBrush}" />
        <Setter Property="Padding" Value="5"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource BlueBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3" SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        </Border>

                        <!-- Transparent layer for highlighting -->
                        <Border x:Name="Overlay"
                            Background="White"
                            Opacity="0"
                            CornerRadius="8"
                            IsHitTestVisible="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Overlay" Property="Opacity" Value="0.15"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Overlay" Property="Opacity" Value="0.3"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Overlay" Property="Opacity" Value="0"/>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource DisabledForegroundBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="Opacity" Value="0.75"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GreenBtn" TargetType="Button" BasedOn="{StaticResource FormBtn}">
        <Setter Property="Background" Value="{StaticResource GreenBrush}"/>
    </Style>
    <Style x:Key="BlueBtn" TargetType="Button" BasedOn="{StaticResource FormBtn}">
        <Setter Property="Background" Value="{StaticResource BlueBrush}"/>
    </Style>
    <Style x:Key="ButtonMini" TargetType="Button" BasedOn="{StaticResource FormBtn}">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Padding" Value="10 5"/>
    </Style>
    <Style x:Key="MenuBtn" TargetType="Button" BasedOn="{StaticResource BlueBtn}">
        <Setter Property="Margin" Value="0 5"/>
    </Style>
    <Style x:Key="ClearBtn" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Content" Value="✕"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0 0 5 0"/>
        <Setter Property="ToolTip" Value="Очистить"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="20"/>
    </Style>
    <Style x:Key="IconButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <!-- Remove standard border on focus -->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!-- Default icon color -->
        <Setter Property="Foreground" Value="{StaticResource cyanDarkBrush}" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            CornerRadius="0"
                            Padding="5"
                            SnapsToDevicePixels="True"
                            RenderTransformOrigin="0.5,0.5">
                        <Grid x:Name="rootGrid" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1" />
                            </Grid.RenderTransform>
                            <ContentPresenter x:Name="contentPresenter"
                                      Content="{TemplateBinding Content}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RenderTransformOrigin="0.5,0.5">
                                <ContentPresenter.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     To="1.1" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     To="1.1" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="contentPresenter"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0.75" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     To="1" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     To="1" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="contentPresenter"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="DarkCyan" BlurRadius="3" ShadowDepth="0" Opacity="0.7" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="Cursor" Value="Arrow" />
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="IconButtonCsv" TargetType="Button" BasedOn="{StaticResource IconButton}">
        <Setter Property="Foreground" Value="{StaticResource CsvBrush}" />
    </Style>
    <Style x:Key="IconButtonCyan" TargetType="Button" BasedOn="{StaticResource IconButton}">
        <Setter Property="Foreground" Value="{StaticResource cyanDarkBrush}" />
    </Style>
    <Style x:Key="IconButtonMagenta" TargetType="Button" BasedOn="{StaticResource IconButton}">
        <Setter Property="Foreground" Value="{StaticResource magentaDarkBrush}" />
    </Style>
    <Style x:Key="IconButtonOrange" TargetType="Button" BasedOn="{StaticResource IconButton}">
        <Setter Property="Foreground" Value="{StaticResource OrangeRegularBrush}" />
    </Style>
    <Style x:Key="IconButtonPdf" TargetType="Button" BasedOn="{StaticResource IconButton}">
        <Setter Property="Foreground" Value="{StaticResource PdfBrush}" />
    </Style>
    <Style x:Key="IconButtonRed" TargetType="Button" BasedOn="{StaticResource IconButton}">
        <Setter Property="Foreground" Value="{StaticResource ErrorBrush}" />
    </Style>
    <Style x:Key="IconToggleButtonPathStyle" TargetType="ToggleButton">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="BorderThickness" Value="1" />
        <!-- Remove standard border on focus -->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!-- Default icon color -->
        <Setter Property="Foreground" Value="{StaticResource cyanDarkBrush}" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="border"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            CornerRadius="0"
                            Padding="0"
                            SnapsToDevicePixels="True"
                            RenderTransformOrigin="0.5,0.5">
                        <ContentPresenter x:Name="contentPresenter"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Mouse Over -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.75" />
                            <Setter TargetName="contentPresenter" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.05" ScaleY="1.05" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="border" Property="BorderBrush" Value="DodgerBlue" />
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="DarkCyan" BlurRadius="3" ShadowDepth="0" Opacity="0.7" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.75" />
                        </Trigger>

                        <!-- Pressing -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="border" Property="BorderBrush" Value="RoyalBlue" />
                            <Setter TargetName="contentPresenter" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource cyanDarkBrush}" />
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="LightCyan" BlurRadius="5" ShadowDepth="0" Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource magentaDarkBrush}" />
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="LightCyan" BlurRadius="5" ShadowDepth="0" Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <!-- Checked -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource magentaDarkBrush}" />
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="contentPresenter" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.05" ScaleY="1.05" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FormExpander" TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite"
                                          FontWeight="Bold"
                                          DockPanel.Dock="Top"
                                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                          Background="Transparent"
                                          BorderThickness="0"
                                          Padding="0"
                                          HorizontalContentAlignment="Stretch"
                                          VerticalContentAlignment="Center"
                                          Cursor="Hand">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <DockPanel LastChildFill="False" VerticalAlignment="Center">
                                            <ContentPresenter x:Name="HeaderContent" VerticalAlignment="Center" />
                                            <Path x:Name="Arrow"
                                                  Width="10" Height="10"
                                                  Margin="3,3,0,0"
                                                  VerticalAlignment="Center"
                                                  Data="M 0 0 L 10 0 L 5 5 Z"
                                                  Fill="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" />
                                        </DockPanel>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="Arrow" Property="RenderTransform">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="180" CenterX="5" CenterY="2.5" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Arrow" Property="Fill" Value="Red" />
                                                <Setter TargetName="HeaderContent" Property="TextElement.Foreground" Value="Red" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                                <ContentPresenter Content="{TemplateBinding Header}">
                                    <ContentPresenter.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" />
                                            <Setter Property="TextDecorations" Value="Underline" />
                                        </Style>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>
                            </ToggleButton>

                            <!-- Wrapper for shift and opacity animation  -->
                            <Border x:Name="ExpandSite" ClipToBounds="True" Opacity="0">
                                <Border.RenderTransform>
                                    <TranslateTransform Y="-20" />
                                </Border.RenderTransform>
                                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Border>
                        </DockPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpandSite"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0" To="1" Duration="0:0:0.3" />
                                        <DoubleAnimation Storyboard.TargetName="ExpandSite"
                                                         Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                         From="-20" To="0" Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpandSite"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1" To="0" Duration="0:0:0.3" />
                                        <DoubleAnimation Storyboard.TargetName="ExpandSite"
                                                         Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                         From="0" To="-20" Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="HyperlinkLikeTextBlock" TargetType="TextBlock" BasedOn="{StaticResource FormTextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="TextDecorations" Value="Underline" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Error template: message under the field -->
    <ControlTemplate x:Key="ValidationErrorTemplate">
        <StackPanel>
            <AdornedElementPlaceholder/>
            <TextBlock Foreground="Red" Margin="0,2,0,0" Visibility="Collapsed"
                       Text="{Binding [0].ErrorContent}"
            />
            <Popup Placement="Bottom"
                   HorizontalOffset="20"
                   VerticalOffset="-20"
                   StaysOpen="False"
                   AllowsTransparency="True"
                   IsOpen="False">
                <Border Background="#80FF2200" Padding="8" CornerRadius="4" >
                    <TextBlock Foreground="White" FontSize="12"
                               Text="{Binding [0].ErrorContent}"
                               />
                </Border>
            </Popup>
        </StackPanel>
    </ControlTemplate>
</ResourceDictionary>

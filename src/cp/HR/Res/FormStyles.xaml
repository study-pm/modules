<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
                    xmlns:util="clr-namespace:HR.Utilities">
    <util:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
    <util:ErrorVisibilityConverter x:Key="ErrorVisibilityConverter"/>
    <controls:BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource cyanDarkBrush}"/>
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0 5"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style x:Key="FormElement" TargetType="FrameworkElement">
        <Setter Property="Margin" Value="0 10"/>
    </Style>
     <Style x:Key="MessageBox" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontStretch" Value="Condensed"/>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="MinHeight" Value="10"/>
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!-- Style for displaying the error -->
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="0" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#FFE5E5E5"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#FFADB2B5"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.75"/>
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="DodgerBlue"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#f9d3d2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True"/>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="util:ValidationHelper.Touched" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="Red"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#e0f9d2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="util:ValidationHelper.Touched" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource baseBackgroundBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBoxMini" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0 5"/>
    </Style>

    <Style TargetType="PasswordBox">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="0" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#FFE5E5E5"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#FFADB2B5"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.75"/>
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="DodgerBlue"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#f9d3d2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True"/>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="util:ValidationHelper.Touched" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="Red"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#e0f9d2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="util:ValidationHelper.Touched" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource baseBackgroundBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFocusVisual" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="0" Stroke="DodgerBlue" Opacity="1" StrokeThickness="1" RadiusX="3" RadiusY="3" SnapsToDevicePixels="True">
                        <Rectangle.Effect>
                            <DropShadowEffect Color="#264d7f7f" Direction="270" ShadowDepth="5" BlurRadius="10" Opacity="0.15"/>
                        </Rectangle.Effect>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FormBtn" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteDarkBrush}" />
        <Setter Property="Padding" Value="5"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource BlueBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3" SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        </Border>

                        <!-- Полупрозрачный слой для подсветки -->
                        <Border x:Name="Overlay"
                            Background="White"
                            Opacity="0"
                            CornerRadius="8"
                            IsHitTestVisible="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Overlay" Property="Opacity" Value="0.15"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Overlay" Property="Opacity" Value="0.3"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Overlay" Property="Opacity" Value="0"/>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            <Setter Property="Opacity" Value="0.75"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GreenBtn" TargetType="Button" BasedOn="{StaticResource FormBtn}">
        <Setter Property="Background" Value="{StaticResource GreenBrush}"/>
    </Style>
    <Style x:Key="BlueBtn" TargetType="Button" BasedOn="{StaticResource FormBtn}">
        <Setter Property="Background" Value="{StaticResource BlueBrush}"/>
    </Style>
    <Style x:Key="ButtonMini" TargetType="Button" BasedOn="{StaticResource FormBtn}">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Padding" Value="10 5"/>
    </Style>
    <Style x:Key="MenuBtn" TargetType="Button" BasedOn="{StaticResource BlueBtn}">
        <Setter Property="Margin" Value="0 5"/>
    </Style>
    <Style x:Key="ClearBtn" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Content" Value="✕"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0 0 5 0"/>
        <Setter Property="ToolTip" Value="Очистить"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="20"/>
    </Style>
    <Style x:Key="IconToggleButtonPathStyle" TargetType="ToggleButton">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="BorderThickness" Value="1" />
        <!-- Убираем стандартную рамку при фокусировке -->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!-- Цвет иконки по умолчанию -->
        <Setter Property="Foreground" Value="{StaticResource cyanDarkBrush}" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="border"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            CornerRadius="0"
                            Padding="0"
                            SnapsToDevicePixels="True"
                            RenderTransformOrigin="0.5,0.5">
                        <ContentPresenter x:Name="contentPresenter"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Наведение -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.75" />
                            <Setter TargetName="contentPresenter" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.05" ScaleY="1.05" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="border" Property="BorderBrush" Value="DodgerBlue" />
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="DarkCyan" BlurRadius="3" ShadowDepth="0" Opacity="0.7" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.75" />
                        </Trigger>

                        <!-- Нажатие -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="border" Property="BorderBrush" Value="RoyalBlue" />
                            <Setter TargetName="contentPresenter" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource cyanDarkBrush}" />
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="LightCyan" BlurRadius="5" ShadowDepth="0" Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource magentaDarkBrush}" />
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="LightCyan" BlurRadius="5" ShadowDepth="0" Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <!-- Состояние Checked -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource magentaDarkBrush}" />
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="contentPresenter" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.05" ScaleY="1.05" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Шаблон ошибки: сообщение под полем -->
    <ControlTemplate x:Key="ValidationErrorTemplate">
        <StackPanel>
            <AdornedElementPlaceholder/>
            <TextBlock Foreground="Red" Margin="0,2,0,0" Visibility="Collapsed"
                       Text="{Binding [0].ErrorContent}"
            />
            <Popup Placement="Bottom"
                   HorizontalOffset="20"
                   VerticalOffset="-20"
                   StaysOpen="False"
                   AllowsTransparency="True"
                   IsOpen="False">
                <Border Background="#80FF2200" Padding="8" CornerRadius="4" >
                    <TextBlock Foreground="White" FontSize="12"
                               Text="{Binding [0].ErrorContent}"
                               />
                </Border>
            </Popup>
        </StackPanel>
    </ControlTemplate>
</ResourceDictionary>
